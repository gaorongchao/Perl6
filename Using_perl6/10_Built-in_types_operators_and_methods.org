#+TITLE: 11: Built-in types,operators and methods
#+AUTHOR: GRC(扬眉剑)
#+LATEX_CLASS: ctexart
* github地址
https://github.com/gaorongchao/Perl6/tree/master/Using_perl6

所有后续更新都在github上进行，其他地方不做同步。
发现任何错误，或者不当的地方，请先到github查看是否改正。
如果没有请留言。或者邮件交流：rongchaogao@gmail.com
* 引入
很多操作符都需要一种特定类型的数据。
如果操作对象和要操作对象的类型不统一，
Perl会复制一份操作对象，然后将它转换成需要的类型。
比如：$a+$b 将把$a和$b的副本转换成数字（如果它们
已经都是数字了除外）。这种隐式的转换被称为强制转换（coercion)。

除了操作符，其他一些语法也会强制转换，if 和 while 会把数据转换成
真假（布尔值），for会把数据转换成列表，等等。

* 数字
有些时候强制转换都是透明的。Perl 6 中有许多数字类型，他们都可以混合使用。
比如：用一个整数减去一个浮点数，123-12.1e1。

这里面最重要的类型是：
+ Int
Int对象存储的是任意大小的整数。如果你如果你写的文字只包含数字，比如12，那么
他就是 Int。
+ Num
Num是浮点型数据。它存储着符号，小数部分和指数，每一个都有固定的长度。

用科学记数法表示的数字比如 6.022e23 就是Num类型的数字。

+ Rat
Rat是有理数的缩写，存储小数的时候不会损失精度。这是通过跟踪作为整数的
分子和分母来实现的。所以当数学运算在遇到很大的组成部分(large components)
的有理数的时候，运算速度会非常的慢。因为这个原因，当有理数有一个大分母的时候
会自动讲解为Num类型。

所以写一个以小数点为分隔符的分数值，比如3.14，就是一个Rat 类型的数。

+ Complex 复数
复数有两个部分，实部和虚部，如果其中任何一部分为 NaN，然后整个数字也许就是 NaN。

复数是这种形式 a + bi , bi 是虚部。
* 字符串

* 布尔类型
